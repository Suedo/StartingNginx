events {

}

# --------------------------------------------------------
# basic location matching
# --------------------------------------------------------
http {

  include /etc/nginx/mime.types;

  # when hitting root location, will serve the index.html at this location
  # unless otherwise configured via a custom location block
  root /mnt/e/code/suedo/StartingNginx/Udemy/site;


  server {

    listen 8000;

    # prefix match: match anything start with "/greet", ex: /greeting
    # case sensistive
    location /greet {
      return 200 "Hello From Nginx! :: Prefix /greet location";
    }

    location = /greet {
      return 200 "Hello From Nginx! :: Exact /greet location";
    }

    location = /greet9 {
      return 200 "Hello From Nginx! :: Exact /greet9 location";
    }

    # regex match, also case sensitive
    location ~ /Greet[0-9] {
      return 200 "Hello From Nginx! :: Regex /Greet[0-9] location";
    }

    # regex match, also case sensitive
    # for case insensitiveness, use `~*` instead of `~`
    location ~* /greet[0-9] {
      return 200 "Hello From Nginx! :: case insensitive Regex /greet[0-9] location";
    }

    # https://stackoverflow.com/a/59846239/2715083

    # preferential prefix
    location ^~ /Greet1 {
      return 200 "Hello From Nginx! :: Preferential Prefix /Greet1 location";
    }

    # location match priority
    # preferential prefix > exact > regex > prefix

  }

  # --------------------------------------------------------
  # redirects and rewrites and regex capture
  # --------------------------------------------------------
  server {
    listen 8010;
    location /logo {
      # 3xx are all redirect codes
      return 307 /thumb.png;
    }

    # Main diff between redirect and rewrite:
    #
    # Redirect: Nginx tells client where to go, and thus, URL also changes to the new location
    # thus, for /logo, the url will change to "http://localhost:8010/thumb.png" after redirect
    #
    # Rewrite: Nginx internally mutates the URL to the new url,
    # and the new URL is evaluated from the start, as if client made a new request to the new URL
    # While this is powerful, also needs more resources
    location /re_test {
      rewrite ^/re_\w+ http://localhost:8000/greet;
      # URL "http://localhost:8010/re_test" changes to "http://localhost:8000/greet"
    }

    location ~ /re_regex {
      rewrite ^/re_\w+$ http://localhost:8010/regexCapture/$arg_name;

      # ?? : this does not cause URL change in browser, although gets redirected ???
      # rewrite ^/re_\w+$ /regexCapture/$arg_name;
    }

    # capture groups : $1, $2 etc
    location ~ /regexCapture/(\w+) {
      return 200 "Hello! rewritten from '/re_regex', regex capture group:: Name: $1";
    }

  }

  #  --------------------------------------------------------
  # conditional check demo
  #  --------------------------------------------------------
  server {

    listen 9000;

    # nginx converts args into variables with the format $arg_<argument name>
    if ($arg_apikey != 1234) {
      return 401 "Unauthorized: Incorrect Api Key";
    }
    # ^^ IMP: when we hit "http://localhost:9000/?apikey=1234", the css and images will not
    # loaded with the index.html, as those internal calls do not pass the apikey
    # Hitting "http://localhost:8000/?apikey=1234" however, does load the styles properly
    # as the 8000 server (above) doesnt have this apikey condition


    # should not use If inside location block
    # https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
    location /inspect {
      return 200 "$host\n$uri\n$args\nName: $arg_name";
    }
  }

  #  --------------------------------------------------------
  # conditional check + custom variables
  #  --------------------------------------------------------
  server {

    listen 9010;

    set $weekend 'No';

    # regex search using ~, just like in location blocks
    if ($date_local ~ 'Saturday|Sunday') {
      set $Weekend 'Yes';
    }

    location /is_weekend {
      return 200 "$Weekend";
    }

    location /inspect {
      return 200 "$host\n$uri\n$args\nName: $arg_name\nDate: $date_local\nWeekend: $Weekend";
    }
  }
}